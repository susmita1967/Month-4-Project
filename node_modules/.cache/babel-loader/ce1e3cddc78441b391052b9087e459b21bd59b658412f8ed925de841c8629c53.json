{"ast":null,"code":"import { invariant } from '../../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../../error/GraphQLError.mjs';\nimport { getNamedType, isInputObjectType } from '../../../type/definition.mjs';\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nexport function NoDeprecatedCustomRule(context) {\n  return {\n    Field(node) {\n      const fieldDef = context.getFieldDef();\n      const deprecationReason = fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.deprecationReason;\n      if (fieldDef && deprecationReason != null) {\n        const parentType = context.getParentType();\n        parentType != null || invariant(false);\n        context.reportError(new GraphQLError(\"The field \".concat(parentType.name, \".\").concat(fieldDef.name, \" is deprecated. \").concat(deprecationReason), {\n          nodes: node\n        }));\n      }\n    },\n    Argument(node) {\n      const argDef = context.getArgument();\n      const deprecationReason = argDef === null || argDef === void 0 ? void 0 : argDef.deprecationReason;\n      if (argDef && deprecationReason != null) {\n        const directiveDef = context.getDirective();\n        if (directiveDef != null) {\n          context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" is deprecated. \").concat(deprecationReason), {\n            nodes: node\n          }));\n        } else {\n          const parentType = context.getParentType();\n          const fieldDef = context.getFieldDef();\n          parentType != null && fieldDef != null || invariant(false);\n          context.reportError(new GraphQLError(\"Field \\\"\".concat(parentType.name, \".\").concat(fieldDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" is deprecated. \").concat(deprecationReason), {\n            nodes: node\n          }));\n        }\n      }\n    },\n    ObjectField(node) {\n      const inputObjectDef = getNamedType(context.getParentInputType());\n      if (isInputObjectType(inputObjectDef)) {\n        const inputFieldDef = inputObjectDef.getFields()[node.name.value];\n        const deprecationReason = inputFieldDef === null || inputFieldDef === void 0 ? void 0 : inputFieldDef.deprecationReason;\n        if (deprecationReason != null) {\n          context.reportError(new GraphQLError(\"The input field \".concat(inputObjectDef.name, \".\").concat(inputFieldDef.name, \" is deprecated. \").concat(deprecationReason), {\n            nodes: node\n          }));\n        }\n      }\n    },\n    EnumValue(node) {\n      const enumValueDef = context.getEnumValue();\n      const deprecationReason = enumValueDef === null || enumValueDef === void 0 ? void 0 : enumValueDef.deprecationReason;\n      if (enumValueDef && deprecationReason != null) {\n        const enumTypeDef = getNamedType(context.getInputType());\n        enumTypeDef != null || invariant(false);\n        context.reportError(new GraphQLError(\"The enum value \\\"\".concat(enumTypeDef.name, \".\").concat(enumValueDef.name, \"\\\" is deprecated. \").concat(deprecationReason), {\n          nodes: node\n        }));\n      }\n    }\n  };\n}","map":{"version":3,"names":["invariant","GraphQLError","getNamedType","isInputObjectType","NoDeprecatedCustomRule","context","Field","node","fieldDef","getFieldDef","deprecationReason","parentType","getParentType","reportError","concat","name","nodes","Argument","argDef","getArgument","directiveDef","getDirective","ObjectField","inputObjectDef","getParentInputType","inputFieldDef","getFields","value","EnumValue","enumValueDef","getEnumValue","enumTypeDef","getInputType"],"sources":["E:/Sankey_Project/node_modules/graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs"],"sourcesContent":["import { invariant } from '../../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../../error/GraphQLError.mjs';\nimport { getNamedType, isInputObjectType } from '../../../type/definition.mjs';\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nexport function NoDeprecatedCustomRule(context) {\n  return {\n    Field(node) {\n      const fieldDef = context.getFieldDef();\n      const deprecationReason =\n        fieldDef === null || fieldDef === void 0\n          ? void 0\n          : fieldDef.deprecationReason;\n\n      if (fieldDef && deprecationReason != null) {\n        const parentType = context.getParentType();\n        parentType != null || invariant(false);\n        context.reportError(\n          new GraphQLError(\n            `The field ${parentType.name}.${fieldDef.name} is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    Argument(node) {\n      const argDef = context.getArgument();\n      const deprecationReason =\n        argDef === null || argDef === void 0\n          ? void 0\n          : argDef.deprecationReason;\n\n      if (argDef && deprecationReason != null) {\n        const directiveDef = context.getDirective();\n\n        if (directiveDef != null) {\n          context.reportError(\n            new GraphQLError(\n              `Directive \"@${directiveDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        } else {\n          const parentType = context.getParentType();\n          const fieldDef = context.getFieldDef();\n          (parentType != null && fieldDef != null) || invariant(false);\n          context.reportError(\n            new GraphQLError(\n              `Field \"${parentType.name}.${fieldDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const inputObjectDef = getNamedType(context.getParentInputType());\n\n      if (isInputObjectType(inputObjectDef)) {\n        const inputFieldDef = inputObjectDef.getFields()[node.name.value];\n        const deprecationReason =\n          inputFieldDef === null || inputFieldDef === void 0\n            ? void 0\n            : inputFieldDef.deprecationReason;\n\n        if (deprecationReason != null) {\n          context.reportError(\n            new GraphQLError(\n              `The input field ${inputObjectDef.name}.${inputFieldDef.name} is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    EnumValue(node) {\n      const enumValueDef = context.getEnumValue();\n      const deprecationReason =\n        enumValueDef === null || enumValueDef === void 0\n          ? void 0\n          : enumValueDef.deprecationReason;\n\n      if (enumValueDef && deprecationReason != null) {\n        const enumTypeDef = getNamedType(context.getInputType());\n        enumTypeDef != null || invariant(false);\n        context.reportError(\n          new GraphQLError(\n            `The enum value \"${enumTypeDef.name}.${enumValueDef.name}\" is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}