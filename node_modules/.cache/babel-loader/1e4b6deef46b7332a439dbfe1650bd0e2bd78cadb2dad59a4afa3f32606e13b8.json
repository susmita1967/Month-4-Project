{"ast":null,"code":"import _taggedTemplateLiteral from\"E:/Sankey_Project/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React from'react';import{useQuery,gql}from'@apollo/client';import RoomTypeForm from'./RoomTypeForm';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GET_ROOM_TYPES=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query GetRoomTypes {\\n    roomTypes {\\n      id\\n      name\\n      description\\n      price\\n    }\\n  }\\n\"])));const RoomTypeList=()=>{const{loading,error,data,refetch}=useQuery(GET_ROOM_TYPES);if(loading)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});if(error)return/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",error.message]});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Room Type List\"}),/*#__PURE__*/_jsx(RoomTypeForm,{refetchRoomTypes:refetch}),\" \",/*#__PURE__*/_jsx(\"ul\",{children:data.roomTypes.map(_ref=>{let{id,name,description,price}=_ref;return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:name}),/*#__PURE__*/_jsx(\"p\",{children:description}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Price: \",price]})]})},id);})})]});};export default RoomTypeList;","map":{"version":3,"names":["React","useQuery","gql","RoomTypeForm","jsx","_jsx","jsxs","_jsxs","GET_ROOM_TYPES","_templateObject","_taggedTemplateLiteral","RoomTypeList","loading","error","data","refetch","children","message","refetchRoomTypes","roomTypes","map","_ref","id","name","description","price"],"sources":["E:/Sankey_Project/src/components/RoomTypeList.js"],"sourcesContent":["import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport RoomTypeForm from './RoomTypeForm'; \r\n\r\nconst GET_ROOM_TYPES = gql`\r\n  query GetRoomTypes {\r\n    roomTypes {\r\n      id\r\n      name\r\n      description\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nconst RoomTypeList = () => {\r\n  const { loading, error, data, refetch } = useQuery(GET_ROOM_TYPES);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Room Type List</h2>\r\n      <RoomTypeForm refetchRoomTypes={refetch} /> {/* Include RoomTypeForm component and pass refetch */}\r\n      <ul>\r\n        {data.roomTypes.map(({ id, name, description, price }) => (\r\n          <li key={id}>\r\n            <div>\r\n              <h3>{name}</h3>\r\n              <p>{description}</p>\r\n              <p>Price: {price}</p>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomTypeList;\r\n"],"mappings":"2IAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,GAAG,KAAQ,gBAAgB,CAC9C,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1C,KAAM,CAAAC,cAAc,CAAGN,GAAG,CAAAO,eAAA,GAAAA,eAAA,CAAAC,sBAAA,qHASzB,CAED,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAEC,OAAO,CAAEC,KAAK,CAAEC,IAAI,CAAEC,OAAQ,CAAC,CAAGd,QAAQ,CAACO,cAAc,CAAC,CAElE,GAAII,OAAO,CAAE,mBAAOP,IAAA,MAAAW,QAAA,CAAG,YAAU,CAAG,CAAC,CACrC,GAAIH,KAAK,CAAE,mBAAON,KAAA,MAAAS,QAAA,EAAG,SAAO,CAACH,KAAK,CAACI,OAAO,EAAI,CAAC,CAE/C,mBACEV,KAAA,QAAAS,QAAA,eACEX,IAAA,OAAAW,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBX,IAAA,CAACF,YAAY,EAACe,gBAAgB,CAAEH,OAAQ,CAAE,CAAC,IAAC,cAC5CV,IAAA,OAAAW,QAAA,CACGF,IAAI,CAACK,SAAS,CAACC,GAAG,CAACC,IAAA,MAAC,CAAEC,EAAE,CAAEC,IAAI,CAAEC,WAAW,CAAEC,KAAM,CAAC,CAAAJ,IAAA,oBACnDhB,IAAA,OAAAW,QAAA,cACET,KAAA,QAAAS,QAAA,eACEX,IAAA,OAAAW,QAAA,CAAKO,IAAI,CAAK,CAAC,cACflB,IAAA,MAAAW,QAAA,CAAIQ,WAAW,CAAI,CAAC,cACpBjB,KAAA,MAAAS,QAAA,EAAG,SAAO,CAACS,KAAK,EAAI,CAAC,EAClB,CAAC,EALCH,EAML,CAAC,EACN,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAAX,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}