{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sankey_Project\\\\src\\\\apolloClient.js\";\nimport React from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000/graphql'\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nexport const ApolloProviderWrapper = ({\n  children\n}) => /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this);\n_c = ApolloProviderWrapper;\nvar _c;\n$RefreshReg$(_c, \"ApolloProviderWrapper\");","map":{"version":3,"names":["React","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","jsxDEV","_jsxDEV","httpLink","uri","authLink","_","headers","authorization","localStorage","getItem","client","link","concat","cache","ApolloProviderWrapper","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Sankey_Project/src/apolloClient.js"],"sourcesContent":["\r\nimport React from 'react';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: 'http://localhost:4000/graphql', \r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: `Bearer ${localStorage.getItem('token')}`, \r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport const ApolloProviderWrapper = ({ children }) => (\r\n  <ApolloProvider client={client}>\r\n    {children}\r\n  </ApolloProvider>\r\n);\r\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,YAAY,EACZC,aAAa,EACbC,cAAc,EACdC,cAAc,QACT,gBAAgB;AACvB,SAASC,UAAU,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,QAAQ,GAAGJ,cAAc,CAAC;EAC9BK,GAAG,EAAE;AACP,CAAC,CAAC;AAEF,MAAMC,QAAQ,GAAGL,UAAU,CAAC,CAACM,CAAC,EAAE;EAAEC;AAAQ,CAAC,KAAK;EAC9C,OAAO;IACLA,OAAO,EAAE;MACP,GAAGA,OAAO;MACVC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACxD;EACF,CAAC;AACH,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAG,IAAIf,YAAY,CAAC;EAC9BgB,IAAI,EAAEP,QAAQ,CAACQ,MAAM,CAACV,QAAQ,CAAC;EAC/BW,KAAK,EAAE,IAAIjB,aAAa,CAAC;AAC3B,CAAC,CAAC;AAEF,OAAO,MAAMkB,qBAAqB,GAAGA,CAAC;EAAEC;AAAS,CAAC,kBAChDd,OAAA,CAACJ,cAAc;EAACa,MAAM,EAAEA,MAAO;EAAAK,QAAA,EAC5BA;AAAQ;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACK,CACjB;AAACC,EAAA,GAJWN,qBAAqB;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}