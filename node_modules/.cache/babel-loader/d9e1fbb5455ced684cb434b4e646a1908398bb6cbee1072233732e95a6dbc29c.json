{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sankey_Project\\\\src\\\\components\\\\HotelList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport DeleteButton from './DeleteButton';\nimport HotelForm from './HotelForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_HOTELS = gql`\n  query GetHotels {\n    hotels {\n      id\n      name\n      address\n      description\n    }\n  }\n`;\nconst HotelList = () => {\n  _s();\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GET_HOTELS);\n  const handleDelete = () => {\n    refetch();\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hotel List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HotelForm, {\n      refetchHotels: refetch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.hotels.map(({\n        id,\n        name,\n        address,\n        description\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n          id: id,\n          onDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(HotelList, \"D1/SdZTYM540x1wj5x+NzEA5Uvk=\", false, function () {\n  return [useQuery];\n});\n_c = HotelList;\nexport default HotelList;\n/*\r\nimport React, { useState } from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport HotelForm from './HotelForm';\r\nimport DeleteButton from './DeleteButton';\r\n\r\nconst GET_HOTELS = gql`\r\n  query GetHotels {\r\n    hotels {\r\n      id\r\n      name\r\n      address\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nconst HotelList = () => {\r\n  const { loading, error, data, refetch } = useQuery(GET_HOTELS);\r\n  const [selectedHotel, setSelectedHotel] = useState(null);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  const handleEdit = (hotel) => {\r\n    setSelectedHotel(hotel);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setSelectedHotel(null);\r\n    refetch();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Hotel List</h2>\r\n      <ul>\r\n        {data.hotels.map((hotel) => (\r\n          <li key={hotel.id}>\r\n            <div>\r\n              <h3>{hotel.name}</h3>\r\n              <p>{hotel.address}</p>\r\n              <p>{hotel.description}</p>\r\n            </div>\r\n            <button onClick={() => handleEdit(hotel)}>Edit</button>\r\n            <DeleteButton id={hotel.id} onDelete={handleDelete} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h2>{selectedHotel ? 'Edit Hotel' : 'Create Hotel'}</h2>\r\n      <HotelForm hotel={selectedHotel} refetchHotels={refetch} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HotelList;\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"HotelList\");","map":{"version":3,"names":["React","useQuery","gql","DeleteButton","HotelForm","jsxDEV","_jsxDEV","GET_HOTELS","HotelList","_s","loading","error","data","refetch","handleDelete","children","fileName","_jsxFileName","lineNumber","columnNumber","message","refetchHotels","hotels","map","id","name","address","description","onDelete","_c","$RefreshReg$"],"sources":["E:/Sankey_Project/src/components/HotelList.js"],"sourcesContent":["import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport DeleteButton from './DeleteButton';\r\nimport HotelForm from './HotelForm'; \r\n\r\nconst GET_HOTELS = gql`\r\n  query GetHotels {\r\n    hotels {\r\n      id\r\n      name\r\n      address\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nconst HotelList = () => {\r\n  const { loading, error, data, refetch } = useQuery(GET_HOTELS);\r\n\r\n  const handleDelete = () => {\r\n    refetch(); \r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Hotel List</h2>\r\n      <HotelForm refetchHotels={refetch} /> {}\r\n      <ul>\r\n        {data.hotels.map(({ id, name, address, description }) => (\r\n          <li key={id}>\r\n            <div>\r\n              <h3>{name}</h3>\r\n              <p>{address}</p>\r\n              <p>{description}</p>\r\n            </div>\r\n            <DeleteButton id={id} onDelete={handleDelete} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HotelList;\r\n/*\r\nimport React, { useState } from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport HotelForm from './HotelForm';\r\nimport DeleteButton from './DeleteButton';\r\n\r\nconst GET_HOTELS = gql`\r\n  query GetHotels {\r\n    hotels {\r\n      id\r\n      name\r\n      address\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nconst HotelList = () => {\r\n  const { loading, error, data, refetch } = useQuery(GET_HOTELS);\r\n  const [selectedHotel, setSelectedHotel] = useState(null);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  const handleEdit = (hotel) => {\r\n    setSelectedHotel(hotel);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setSelectedHotel(null);\r\n    refetch();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Hotel List</h2>\r\n      <ul>\r\n        {data.hotels.map((hotel) => (\r\n          <li key={hotel.id}>\r\n            <div>\r\n              <h3>{hotel.name}</h3>\r\n              <p>{hotel.address}</p>\r\n              <p>{hotel.description}</p>\r\n            </div>\r\n            <button onClick={() => handleEdit(hotel)}>Edit</button>\r\n            <DeleteButton id={hotel.id} onDelete={handleDelete} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h2>{selectedHotel ? 'Edit Hotel' : 'Create Hotel'}</h2>\r\n      <HotelForm hotel={selectedHotel} refetchHotels={refetch} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HotelList;\r\n\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}