{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sankey_Project\\\\src\\\\components\\\\UserList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport UserForm from './UserForm';\nimport DeleteButton from './DeleteButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_USERS = gql`\n  query GetUsers {\n    users {\n      id\n      username\n      email\n      role\n    }\n  }\n`;\nconst UserList = () => {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_USERS);\n  const [selectedUser, setSelectedUser] = useState(null);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 21\n  }, this);\n  const handleEdit = user => {\n    setSelectedUser(user);\n  };\n  const handleDelete = () => {\n    setSelectedUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(user),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n          id: user.id,\n          onDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selectedUser ? 'Edit User' : 'Create User'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserForm, {\n      user: selectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"LTVgYC5l7cVcH5zjgbc7R0sKdnM=\", false, function () {\n  return [useQuery];\n});\n_c = UserList;\nexport default UserList;\n/*\r\nimport React, { useState } from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport UserForm from './UserForm';\r\nimport DeleteButton from './DeleteButton';\r\n\r\nconst GET_USERS = gql`\r\n  query GetUsers {\r\n    users {\r\n      id\r\n      username\r\n      email\r\n      role\r\n    }\r\n  }\r\n`;\r\n\r\nconst UserList = () => {\r\n  const { loading, error, data, refetch } = useQuery(GET_USERS);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  const handleEdit = (user) => {\r\n    setSelectedUser(user);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setSelectedUser(null);\r\n    refetch();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>User List</h2>\r\n      <ul>\r\n        {data.users.map((user) => (\r\n          <li key={user.id}>\r\n            <span>{user.username}</span>\r\n            <span>{user.email}</span>\r\n            <span>{user.role}</span>\r\n            <button onClick={() => handleEdit(user)}>Edit</button>\r\n            <DeleteButton id={user.id} onDelete={handleDelete} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h2>{selectedUser ? 'Edit User' : 'Create User'}</h2>\r\n      <UserForm user={selectedUser} refetchUsers={refetch} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useState","useQuery","gql","UserForm","DeleteButton","jsxDEV","_jsxDEV","GET_USERS","UserList","_s","loading","error","data","selectedUser","setSelectedUser","children","fileName","_jsxFileName","lineNumber","columnNumber","message","handleEdit","user","handleDelete","users","map","username","email","role","onClick","id","onDelete","_c","$RefreshReg$"],"sources":["E:/Sankey_Project/src/components/UserList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport UserForm from './UserForm';\r\nimport DeleteButton from './DeleteButton';\r\n\r\nconst GET_USERS = gql`\r\n  query GetUsers {\r\n    users {\r\n      id\r\n      username\r\n      email\r\n      role\r\n    }\r\n  }\r\n`;\r\n\r\nconst UserList = () => {\r\n  const { loading, error, data } = useQuery(GET_USERS);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  const handleEdit = user => {\r\n    setSelectedUser(user);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setSelectedUser(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>User List</h2>\r\n      <ul>\r\n        {data.users.map(user => (\r\n          <li key={user.id}>\r\n            <span>{user.username}</span>\r\n            <span>{user.email}</span>\r\n            <span>{user.role}</span>\r\n            <button onClick={() => handleEdit(user)}>Edit</button>\r\n            <DeleteButton id={user.id} onDelete={handleDelete} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h2>{selectedUser ? 'Edit User' : 'Create User'}</h2>\r\n      <UserForm user={selectedUser} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n/*\r\nimport React, { useState } from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport UserForm from './UserForm';\r\nimport DeleteButton from './DeleteButton';\r\n\r\nconst GET_USERS = gql`\r\n  query GetUsers {\r\n    users {\r\n      id\r\n      username\r\n      email\r\n      role\r\n    }\r\n  }\r\n`;\r\n\r\nconst UserList = () => {\r\n  const { loading, error, data, refetch } = useQuery(GET_USERS);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  const handleEdit = (user) => {\r\n    setSelectedUser(user);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setSelectedUser(null);\r\n    refetch();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>User List</h2>\r\n      <ul>\r\n        {data.users.map((user) => (\r\n          <li key={user.id}>\r\n            <span>{user.username}</span>\r\n            <span>{user.email}</span>\r\n            <span>{user.role}</span>\r\n            <button onClick={() => handleEdit(user)}>Edit</button>\r\n            <DeleteButton id={user.id} onDelete={handleDelete} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h2>{selectedUser ? 'Edit User' : 'Create User'}</h2>\r\n      <UserForm user={selectedUser} refetchUsers={refetch} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}